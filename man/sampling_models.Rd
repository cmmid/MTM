% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sampling_functions.R
\name{sampling_dSIR_betagamma}
\alias{sampling_dSIR_betagamma}
\alias{sampling_dSIR_gammaR0}
\title{SIR Step Functions}
\usage{
sampling_dSIR_betagamma(t, state, parms)

sampling_dSIR_gammaR0(times, state, parms)
}
\arguments{
\item{t}{time derivatives to be evaluated (ignored in this model)}

\item{state}{a named, numeric vector, c(S=.., I=..., R=...); the current
system state}

\item{parms}{a list of parameters, containing \code{beta} and \code{gamma} values
(for \code{sampling_dSIR_betagamma}) or \code{gamma} and \code{R0} values
(for \code{sampling_dSIR_gammaR0}).
All parameters must be positive, scalar values.}
}
\value{
a list, complying with the \code{\link[deSolve:ode]{deSolve::ode()}} \code{func} return
requirement
}
\description{
Provides a step function for a \emph{S}usceptible-\emph{I}nfectious-\emph{R}emoved
ODE model, using a beta-gamma parameterization, complying with the
\code{\link[deSolve:ode]{deSolve::ode()}} \code{func} argument requirements.
}
\examples{
require(MTM)
require(deSolve)
pars <- list(beta = 0.4, gamma = 0.2, R0 = 2)
bg <- ode(y = c(S=99, I=1, R=0), times = 0:50, func = sampling_dSIR_betagamma, parms = pars, method = "rk4")
gR <- ode(y = c(S=99, I=1, R=0), times = 0:50, func = sampling_dSIR_gammaR0, parms = pars, method = "rk4")
}
\seealso{
Other sampling: 
\code{\link{sampling_MC_plot}()},
\code{\link{sampling_maxprevalence}()}
}
\concept{sampling}
